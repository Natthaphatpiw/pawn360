import { Client } from '@line/bot-sdk';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config({ path: '.env.local' });
dotenv.config({ path: '.env' });

const client = new Client({
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN || '',
  channelSecret: process.env.LINE_CHANNEL_SECRET || '',
});

const PRODUCTION_URL = 'https://pawn360.vercel.app';

async function deleteOldRichMenus() {
  try {
    const response = await client.getRichMenuList();
    console.log(`Found ${response.length} existing Rich Menus`);

    for (const menu of response) {
      console.log(`Deleting Rich Menu: ${menu.richMenuId} (${menu.name})`);
      await client.deleteRichMenu(menu.richMenuId);
    }

    console.log('‚úÖ Deleted all old Rich Menus\n');
  } catch (error: any) {
    console.error('Error deleting old Rich Menus:', error.message);
  }
}

async function createRichMenuForNewUsers() {
  try {
    const richMenu = await client.createRichMenu({
      size: {
        width: 2500,
        height: 1686,
      },
      selected: true,
      name: 'Rich Menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà',
      chatBarText: '‡πÄ‡∏°‡∏ô‡∏π',
      areas: [
        {
          bounds: {
            x: 0,
            y: 0,
            width: 2500,
            height: 1686,
          },
          action: {
            type: 'uri',
            uri: `${PRODUCTION_URL}/register`,
          },
        },
      ],
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('Rich Menu ID:', richMenu);
    return richMenu;
  } catch (error: any) {
    console.error('‚ùå Error:', error.message);
    return null;
  }
}

async function createRichMenuForMembers() {
  try {
    const richMenu = await client.createRichMenu({
      size: {
        width: 2500,
        height: 1686,
      },
      selected: true,
      name: 'Rich Menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
      chatBarText: '‡πÄ‡∏°‡∏ô‡∏π',
      areas: [
        {
          bounds: { x: 0, y: 0, width: 833, height: 843 },
          action: { type: 'uri', uri: `${PRODUCTION_URL}/pawn/new` },
        },
        {
          bounds: { x: 833, y: 0, width: 834, height: 843 },
          action: { type: 'uri', uri: `${PRODUCTION_URL}/contracts` },
        },
        {
          bounds: { x: 1667, y: 0, width: 833, height: 843 },
          action: { type: 'uri', uri: `${PRODUCTION_URL}/contracts/history` },
        },
        {
          bounds: { x: 0, y: 843, width: 1250, height: 843 },
          action: { type: 'uri', uri: `${PRODUCTION_URL}/pawn/list` },
        },
        {
          bounds: { x: 1250, y: 843, width: 1250, height: 843 },
          action: { type: 'message', text: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤' },
        },
      ],
    });

    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('Rich Menu ID:', richMenu);
    return richMenu;
  } catch (error: any) {
    console.error('‚ùå Error:', error.message);
    return null;
  }
}

async function main() {
  console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Production\n');

  // ‡∏•‡∏ö Rich Menu ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  await deleteOldRichMenus();

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
  const newUserRichMenuId = await createRichMenuForNewUsers();
  const memberRichMenuId = await createRichMenuForMembers();

  console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ Rich Menu IDs:');
  if (newUserRichMenuId) {
    console.log(`RICH_MENU_ID_NEW_USER=${newUserRichMenuId}`);
    console.log(`\n‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ Rich Menu ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà:`);
    console.log(`curl -X POST https://api-data.line.me/v2/bot/richmenu/${newUserRichMenuId}/content \\`);
    console.log(`  -H "Authorization: Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}" \\`);
    console.log(`  -H "Content-Type: image/png" \\`);
    console.log(`  --data-binary "@/Users/piw/Downloads/pawnline/r1.jpeg"`);
    console.log(`\n‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô Default:`);
    console.log(`curl -X POST https://api.line.me/v2/bot/user/all/richmenu/${newUserRichMenuId} \\`);
    console.log(`  -H "Authorization: Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}"`);
  }
  if (memberRichMenuId) {
    console.log(`\nRICH_MENU_ID_MEMBER=${memberRichMenuId}`);
    console.log(`\n‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ Rich Menu ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:`);
    console.log(`curl -X POST https://api-data.line.me/v2/bot/richmenu/${memberRichMenuId}/content \\`);
    console.log(`  -H "Authorization: Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}" \\`);
    console.log(`  -H "Content-Type: image/png" \\`);
    console.log(`  --data-binary "@/Users/piw/Downloads/pawnline/r2.jpeg"`);
  }
}

main();
