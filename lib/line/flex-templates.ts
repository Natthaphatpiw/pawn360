import { FlexMessage, FlexBubble } from '@line/bot-sdk';

/**
 * Creates a Flex Message with QR code for payment
 */
export function createQRCodeFlexMessage(
  qrCodeUrl: string,
  message: string,
  notificationId: string,
  amount: number,
  actionType: 'redemption' | 'extension'
): FlexMessage {
  const actionText = actionType === 'redemption' ? '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤' : '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';

  const bubble: FlexBubble = {
    type: 'bubble',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‚úÖ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
          weight: 'bold',
          color: '#ffffff',
          size: 'lg'
        },
        {
          type: 'text',
          text: actionText,
          color: '#ffffff',
          size: 'sm',
          margin: 'sm'
        }
      ],
      backgroundColor: '#1DB446',
      paddingAll: 'lg'
    },
    hero: {
      type: 'image',
      url: qrCodeUrl,
      size: 'full',
      aspectRatio: '1:1',
      aspectMode: 'cover'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: message,
          wrap: true,
          size: 'md',
          color: '#333333'
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'box',
          layout: 'vertical',
          margin: 'lg',
          spacing: 'sm',
          contents: [
            {
              type: 'box',
              layout: 'baseline',
              spacing: 'sm',
              contents: [
                {
                  type: 'text',
                  text: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:',
                  color: '#666666',
                  size: 'sm',
                  flex: 2
                },
                {
                  type: 'text',
                  text: `${amount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                  wrap: true,
                  color: '#E91E63',
                  size: 'xl',
                  flex: 5,
                  weight: 'bold'
                }
              ]
            }
          ]
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'text',
          text: 'üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô',
          size: 'sm',
          color: '#999999',
          margin: 'lg',
          wrap: true
        }
      ]
    },
    footer: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'button',
          action: {
            type: 'postback',
            label: '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô',
            data: `action=upload_slip&notificationId=${notificationId}`,
            displayText: '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô'
          },
          style: 'primary',
          color: '#1DB446',
          height: 'sm'
        }
      ],
      spacing: 'sm',
      paddingAll: 'lg'
    }
  };

  return {
    type: 'flex',
    altText: `‚úÖ ${actionText} - ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô`,
    contents: bubble
  };
}

/**
 * Creates a rejection message
 */
export function createRejectionFlexMessage(
  message: string,
  actionType: 'redemption' | 'extension'
): FlexMessage {
  const actionText = actionType === 'redemption' ? '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤' : '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';

  const bubble: FlexBubble = {
    type: 'bubble',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
          weight: 'bold',
          color: '#ffffff',
          size: 'lg'
        },
        {
          type: 'text',
          text: actionText,
          color: '#ffffff',
          size: 'sm',
          margin: 'sm'
        }
      ],
      backgroundColor: '#EF4444',
      paddingAll: 'lg'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: message,
          wrap: true,
          size: 'md',
          color: '#333333'
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'text',
          text: 'üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
          size: 'sm',
          color: '#999999',
          margin: 'lg',
          wrap: true
        }
      ]
    }
  };

  return {
    type: 'flex',
    altText: `‚ùå ${actionText} - ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô`,
    contents: bubble
  };
}

/**
 * Creates a payment success message
 */
export function createPaymentSuccessFlexMessage(
  message: string,
  actionType: 'redemption' | 'extension',
  contractNumber: string
): FlexMessage {
  const actionText = actionType === 'redemption' ? '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤' : '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';

  const bubble: FlexBubble = {
    type: 'bubble',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          weight: 'bold',
          color: '#ffffff',
          size: 'xl'
        }
      ],
      backgroundColor: '#1DB446',
      paddingAll: 'lg'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: message,
          wrap: true,
          size: 'md',
          color: '#333333'
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'box',
          layout: 'vertical',
          margin: 'lg',
          spacing: 'sm',
          contents: [
            {
              type: 'box',
              layout: 'baseline',
              spacing: 'sm',
              contents: [
                {
                  type: 'text',
                  text: '‡πÄ‡∏•‡∏Ç‡∏™‡∏±‡∏ç‡∏ç‡∏≤:',
                  color: '#666666',
                  size: 'sm',
                  flex: 2
                },
                {
                  type: 'text',
                  text: contractNumber,
                  wrap: true,
                  color: '#333333',
                  size: 'sm',
                  flex: 5,
                  weight: 'bold'
                }
              ]
            },
            {
              type: 'box',
              layout: 'baseline',
              spacing: 'sm',
              contents: [
                {
                  type: 'text',
                  text: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:',
                  color: '#666666',
                  size: 'sm',
                  flex: 2
                },
                {
                  type: 'text',
                  text: actionText,
                  wrap: true,
                  color: '#1DB446',
                  size: 'sm',
                  flex: 5,
                  weight: 'bold'
                }
              ]
            }
          ]
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'text',
          text: actionType === 'redemption'
            ? 'üéâ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏≤‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß'
            : '‚ú® ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß',
          size: 'sm',
          color: '#999999',
          margin: 'lg',
          wrap: true
        }
      ]
    },
    footer: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'button',
          action: {
            type: 'uri',
            label: '‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤',
            uri: `https://pawn360.vercel.app/contracts`
          },
          style: 'link',
          height: 'sm'
        }
      ]
    }
  };

  return {
    type: 'flex',
    altText: '‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
    contents: bubble
  };
}

/**
 * Creates a payment failure message
 */
export function createPaymentFailureFlexMessage(
  message: string,
  actionType: 'redemption' | 'extension'
): FlexMessage {
  const actionText = actionType === 'redemption' ? '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤' : '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';

  const bubble: FlexBubble = {
    type: 'bubble',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‚ùå ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
          weight: 'bold',
          color: '#ffffff',
          size: 'lg'
        }
      ],
      backgroundColor: '#EF4444',
      paddingAll: 'lg'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: message,
          wrap: true,
          size: 'md',
          color: '#333333'
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'text',
          text: 'üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤',
          size: 'sm',
          color: '#999999',
          margin: 'lg',
          wrap: true
        }
      ]
    }
  };

  return {
    type: 'flex',
    altText: '‚ùå ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
    contents: bubble
  };
}

/**
 * Creates a pending approval message (after customer sends request)
 */
export function createPendingApprovalMessage(
  actionType: 'redemption' | 'extension',
  contractNumber: string
): FlexMessage {
  const actionText = actionType === 'redemption' ? '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤' : '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';

  const bubble: FlexBubble = {
    type: 'bubble',
    header: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: '‚è≥ ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
          weight: 'bold',
          color: '#ffffff',
          size: 'lg'
        }
      ],
      backgroundColor: '#F59E0B',
      paddingAll: 'lg'
    },
    body: {
      type: 'box',
      layout: 'vertical',
      contents: [
        {
          type: 'text',
          text: `‡∏Ñ‡∏≥‡∏Ç‡∏≠${actionText}‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`,
          wrap: true,
          size: 'md',
          color: '#333333'
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'box',
          layout: 'vertical',
          margin: 'lg',
          spacing: 'sm',
          contents: [
            {
              type: 'box',
              layout: 'baseline',
              spacing: 'sm',
              contents: [
                {
                  type: 'text',
                  text: '‡πÄ‡∏•‡∏Ç‡∏™‡∏±‡∏ç‡∏ç‡∏≤:',
                  color: '#666666',
                  size: 'sm',
                  flex: 2
                },
                {
                  type: 'text',
                  text: contractNumber,
                  wrap: true,
                  color: '#333333',
                  size: 'sm',
                  flex: 5,
                  weight: 'bold'
                }
              ]
            },
            {
              type: 'box',
              layout: 'baseline',
              spacing: 'sm',
              contents: [
                {
                  type: 'text',
                  text: '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:',
                  color: '#666666',
                  size: 'sm',
                  flex: 2
                },
                {
                  type: 'text',
                  text: actionText,
                  wrap: true,
                  color: '#F59E0B',
                  size: 'sm',
                  flex: 5,
                  weight: 'bold'
                }
              ]
            }
          ]
        },
        {
          type: 'separator',
          margin: 'lg'
        },
        {
          type: 'text',
          text: 'üí° ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
          size: 'sm',
          color: '#999999',
          margin: 'lg',
          wrap: true
        }
      ]
    }
  };

  return {
    type: 'flex',
    altText: `‚è≥ ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ - ${actionText}`,
    contents: bubble
  };
}

/**
 * Creates a QR Code Card (‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô/‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å)
 */
export function createQRCodeCard(params: {
  message: string;
  qrCodeUrl: string;
  notificationId: string;
  contractNumber: string;
}): FlexMessage {
  return {
    type: 'flex',
    altText: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '‚úÖ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô', weight: 'bold', color: '#1DB446', size: 'lg' }
        ]
      },
      hero: {
        type: 'image',
        url: params.qrCodeUrl,
        size: 'full',
        aspectRatio: '1:1'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.message, wrap: true },
          { type: 'separator', margin: 'md' },
          { type: 'text', text: `‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${params.contractNumber}`, size: 'sm', color: '#999999', margin: 'md' },
          { type: 'text', text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', size: 'sm', color: '#999999' }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'postback',
              label: '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô',
              data: `action=upload_slip&notificationId=${params.notificationId}`
            },
            style: 'primary',
            color: '#1DB446'
          }
        ]
      }
    }
  };
}

/**
 * Creates a Reduce Principal Card (‡∏•‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞)
 */
export function createReducePrincipalCard(params: {
  message: string;
  qrCodeUrl: string;
  notificationId: string;
  reduceAmount: number;
  interestAmount?: number;
  totalAmount?: number;
}): FlexMessage {
  const interest = params.interestAmount || 0;
  const total = params.totalAmount || (params.reduceAmount + interest);

  return {
    type: 'flex',
    altText: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏•‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô', weight: 'bold', color: '#1DB446', size: 'lg' }
        ]
      },
      hero: {
        type: 'image',
        url: params.qrCodeUrl,
        size: 'full',
        aspectRatio: '1:1'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.message, wrap: true, margin: 'md' },
          { type: 'separator', margin: 'lg' },
          { type: 'text', text: '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î', weight: 'bold', margin: 'lg' },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: '‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏î', size: 'sm', color: '#555555', flex: 0 },
              { type: 'text', text: `${params.reduceAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`, size: 'sm', align: 'end' }
            ]
          },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: '‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏Ñ‡πâ‡∏≤‡∏á', size: 'sm', color: '#555555', flex: 0 },
              { type: 'text', text: `${interest.toLocaleString()} ‡∏ö‡∏≤‡∏ó`, size: 'sm', align: 'end' }
            ]
          },
          { type: 'separator', margin: 'md' },
          {
            type: 'box',
            layout: 'horizontal',
            contents: [
              { type: 'text', text: '‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', weight: 'bold', flex: 0 },
              { type: 'text', text: `${total.toLocaleString()} ‡∏ö‡∏≤‡∏ó`, weight: 'bold', align: 'end', color: '#1DB446' }
            ]
          }
        ]
      },
      footer: {
        type: 'box',
        layout: 'vertical',
        contents: [
          {
            type: 'button',
            action: {
              type: 'postback',
              label: '‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô',
              data: `action=upload_slip&notificationId=${params.notificationId}`
            },
            style: 'primary',
            color: '#1DB446'
          }
        ]
      }
    }
  };
}

/**
 * Creates an Increase Principal Card (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô - ‡πÑ‡∏°‡πà‡∏°‡∏µ QR)
 */
export function createIncreasePrincipalCard(params: {
  message: string;
  increaseAmount: number;
  storeName: string;
}): FlexMessage {
  return {
    type: 'flex',
    altText: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô', weight: 'bold', color: '#1DB446', size: 'lg' }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.message, wrap: true },
          { type: 'separator', margin: 'lg' },
          {
            type: 'box',
            layout: 'vertical',
            contents: [
              { type: 'text', text: `‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ${params.increaseAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`, size: 'xl', weight: 'bold', color: '#1DB446', align: 'center' },
              { type: 'text', text: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏°‡∏≤‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà ${params.storeName}`, size: 'sm', color: '#999999', align: 'center', margin: 'md' }
            ],
            margin: 'lg'
          }
        ]
      }
    }
  };
}

/**
 * Creates a Success Card
 */
export function createSuccessCard(params: {
  title: string;
  message: string;
  contractNumber: string;
}): FlexMessage {
  return {
    type: 'flex',
    altText: params.title,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.title, weight: 'bold', color: '#1DB446', size: 'xl' }
        ]
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.message, wrap: true },
          { type: 'separator', margin: 'lg' },
          { type: 'text', text: `‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${params.contractNumber}`, size: 'sm', color: '#999999', margin: 'md' }
        ]
      }
    }
  };
}

/**
 * Creates a rejection message
 */
export function createRejectionCard(params: {
  message: string;
  type: string;
}): FlexMessage {
  const actionText = getActionText(params.type);

  return {
    type: 'flex',
    altText: `‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠${actionText}‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô`,
    contents: {
      type: 'bubble',
      header: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: '‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô', weight: 'bold', color: '#ffffff', size: 'lg' }
        ],
        backgroundColor: '#EF4444',
        paddingAll: 'lg'
      },
      body: {
        type: 'box',
        layout: 'vertical',
        contents: [
          { type: 'text', text: params.message, wrap: true, size: 'md', color: '#333333' },
          { type: 'separator', margin: 'lg' },
          { type: 'text', text: 'üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°', size: 'sm', color: '#999999', margin: 'lg', wrap: true }
        ]
      }
    }
  };
}

function getActionText(type: string): string {
  switch (type) {
    case 'redemption': return '‡πÑ‡∏ñ‡πà‡∏ñ‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤';
    case 'extension': return '‡∏ï‡πà‡∏≠‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢';
    case 'reduce_principal': return '‡∏•‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô';
    case 'increase_principal': return '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô';
    default: return '';
  }
}
